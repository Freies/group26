---
title: "Assignment 7"
author: "Group 26"
format: html
editor: visual
---

## Load libraries

```{r}
library(tidyverse)
library(broom)
```

## Load data

```{r}

#| eval: false

raw_dir <- "data/_raw/"
data_file <- "gravier.RData"
data_loc <- "https://github.com/ramhiser/datamicroarray/raw/master/data/"

if( !dir.exists("data") ){
  dir.create(path = "data")
}
if( !dir.exists(raw_dir) ){
  dir.create(path = raw_dir)
}
if( !file.exists(str_c(raw_dir, data_file)) ){
  download.file(
    url = str_c(data_loc, data_file),
    destfile = str_c(raw_dir, data_file))
}
load(file = str_c(raw_dir, data_file))

```

### Look at the data in PC coordinates

```{r}
# Make dataset tidy
gravier <- gravier |>
  bind_cols() |>
  as_tibble() 

# Fit the PCA
pca_fit <- gravier |>  
  drop_na() |> 
  select(where(is.numeric)) |>  # retain only numeric columns
  prcomp(scale = TRUE) # do PCA on scaled data

#Plot PCA
pca_fit |> 
  augment(gravier) |>  # add original dataset back in
  ggplot(aes(x = .fittedPC1, y  = .fittedPC2, color = y )) + 
  geom_point() +
  scale_color_manual(
    values = c(good = "#D55E00", poor = "#0072B2")) +
  labs( title = "PCA plot",
           x = "PCA1",
           y = "PCA2") +
  theme(plot.title = element_text(hjust = 0.5))
```

```{r}
gravier |>  View()
pca_fit |> View()
str(pca_fit)
```

## plot the rotation matrix

```{r}
# Make rotation matrix data tidy
pca_fit |> 
  tidy(matrix = "rotation")

# define arrow style for plotting
arrow_style <- arrow(
  angle = 20, ends = "first", type = "closed", length = grid::unit(8, "pt")
)

# plot rotation matrix - 
pca_fit %>%
  tidy(matrix = "rotation") |> 
  pivot_wider(names_from = "PC", names_prefix = "PC", values_from = "value") |> 
  ggplot(aes(PC1, PC2)) +
  geom_segment(xend = 0, yend = 0, arrow = arrow_style) +
  geom_text(
    aes(label = column),
    hjust = 1, nudge_x = -0.02, 
    color = "#904C9F"
  ) +
  xlim(-0.25, .25) + ylim(-.25, 0.25) +
  coord_fixed()  # fix aspect ratio to 1:1

```

## Variance explained by each PC

```{r}

#make data tidy
pca_fit |> 
  tidy(matrix = "eigenvalues")

#plot the percentage variance explained by each PC
pca_fit %>%
  tidy(matrix = "eigenvalues") %>%
  ggplot(aes(PC, percent)) +
  geom_col(fill = "#56B4E9", alpha = 0.8) +
  scale_x_continuous(breaks = 1:9) +
  scale_y_continuous(
    labels = scales::percent_format(),
    expand = expansion(mult = c(0, 0.01))
  ) 
```
